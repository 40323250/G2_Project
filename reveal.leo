<?xml version="1.0" encoding="utf-8"?>
<!-- Created by Leo: http://leoeditor.com/leo_toc.html -->
<leo_file xmlns:leo="http://leoeditor.com/namespaces/leo-python-editor/1.1" >
<leo_header file_format="2" tnodes="0" max_tnode_index="0" clone_windows="0"/>
<globals body_outline_ratio="0.5" body_secondary_ratio="0.5">
	<global_window_position top="50" left="50" height="500" width="700"/>
	<global_log_window_position top="0" left="0" height="0" width="0"/>
</globals>
<preferences/>
<find_panel_settings/>
<vnodes>
<v t="amd.20150913232631.1"><vh>@settings</vh>
<v t="amd.20150913232631.2"><vh>@data qt-gui-plugin-style-sheet</vh></v>
<v t="amd.20150913232631.3"><vh>@string initial_split_orientation = horizontal</vh></v>
</v>
<v t="amd.20150919102739.1"><vh>專案架構</vh></v>
<v t="amd.20150919113957.1" a="E"><vh>以下為 pelican 文章</vh>
<v t="amd.20150919124128.1"><vh>@button user pelican</vh></v>
<v t="amd.20150919114010.1" a="E"><vh>@path pelican</vh>
<v t="amd.20151006130205.1"><vh>edit publishconf.py</vh></v>
<v t="amd.20151006113136.1" a="E"><vh>@path content</vh>
<v t="40323250.20151124123658.1"><vh>edit 2015cpnote1.md</vh></v>
</v>
</v>
</v>
<v t="amd.20150919120205.1" a="E"><vh>以下為 reveal 投影片</vh>
<v t="leo.20170505053249.1" a="E"><vh>@clean index.html</vh>
<v t="leo.20170505053249.2"><vh>檔案說明</vh></v>
<v t="leo.20170505053249.3" a="E"><vh>html 標註</vh>
<v t="leo.20170505053249.4"><vh>head</vh></v>
<v t="leo.20170505053249.8" a="E"><vh>body 標註</vh>
<v t="leo.20170505053249.9" a="E"><vh>style</vh>
<v t="leo.20170505053249.10"><vh>自訂的CSS內容</vh></v>
</v>
<v t="leo.20170505053249.11" a="E"><vh>div class="reveal"</vh>
<v t="leo.20170505053249.12" a="E"><vh>div class="slides"</vh>
<v t="leo.20170505053249.19" a="E"><vh>目錄(#contents)</vh>
<v t="leo.20170505053249.13"><vh>投影封面</vh></v>
<v t="544.20170515005232.1"><vh>摘要</vh></v>
<v t="544.20170515005219.1"><vh>研究動機</vh></v>
</v>
<v t="leo.20170505053249.35" a="E"><vh>3D Printer(#3D printer)</vh>
<v t="544.20170520153429.1"><vh>實體 系統圖</vh></v>
<v t="leo.20170505053249.36"><vh>3D Printer 結構</vh></v>
</v>
<v t="leo.20170505053249.71" a="E"><vh>V-rep(#v-rep)</vh>
<v t="544.20170520153339.1"><vh>虛擬控制 - 架構 系統圖</vh></v>
<v t="leo.20170505053249.72"><vh>V-rep 基本介紹</vh></v>
<v t="544.20170514200717.2"><vh>Onshape 介紹1</vh></v>
<v t="544.20170514201601.1"><vh>Onshape 介紹2</vh></v>
<v t="leo.20170518041620.1"><vh>Onshape 範例圖形</vh></v>
<v t="544.20170515195524.1"><vh>V-rep細部介紹1</vh></v>
<v t="544.20170514200732.2"><vh>八連桿範例</vh></v>
<v t="544.20170514200732.3" a="E"><vh>以下為控制模擬</vh>
<v t="544.20170515003915.1"><vh>V-rep Printer 1 校正</vh></v>
<v t="544.20170519005035.1"><vh>V-rep Scripts</vh></v>
<v t="544.20170515003940.1"><vh>V-rep 可變電阻範例 1</vh></v>
<v t="544.20170515191155.1"><vh>V-rep 可變電阻範例 1 - Arduino</vh></v>
<v t="544.20170515192011.1"><vh>V-rep 可變電阻範例 1 - Scripts</vh></v>
<v t="leo.20170505053249.92"><vh>V-rep 可變電阻範例 1 影片</vh></v>
<v t="544.20170515003932.1"><vh>V-rep 6軸加速度感測器範例 2</vh></v>
<v t="leo.20170505053249.87"><vh>V-rep 6軸加速度感測器範例 2 影片</vh></v>
<v t="544.20170515222109.1"><vh>V-rep Printer 4 Pyquino</vh></v>
<v t="544.20170515202348.1"><vh>V-rep Printer 3 particles</vh></v>
<v t="544.20170514180423.1"><vh>V-rep 列印成果影片</vh></v>
</v>
<v t="544.20170514195356.1"><vh>結論、未來展望</vh></v>
</v>
<v t="leo.20170505053249.96" a="E"><vh>Python Solvespace(#pyslvs)</vh>
<v t="leo.20170505053249.97"><vh>概述</vh></v>
<v t="ahshoe.20170510231618.1"><vh>使用技術 - Python 3</vh></v>
<v t="ahshoe.20170510224721.1"><vh>專案總覽</vh></v>
<v t="ahshoe.20170510224930.1"><vh>功能簡介</vh></v>
<v t="ahshoe.20170519134311.1"><vh>功能簡介 - 平面連桿模擬</vh></v>
<v t="ahshoe.20170519233231.1"><vh>功能簡介 - 尺寸合成</vh></v>
<v t="ahshoe.20170519231059.1"><vh>功能簡介 - 與 Solvespace 比對</vh></v>
<v t="ahshoe.20170519232249.1"><vh>功能簡介 - 轉入 V-rep</vh></v>
</v>
</v>
</v>
<v t="leo.20170505053249.142"><vh>啟動 Reveal</vh></v>
</v>
</v>
</v>
</v>
</vnodes>
<tnodes>
<t tx="40323250.20151124123658.1">@language md
Title: 2015 計算機程式 Jupyter
Date: 2015-09-19 21:41
Category: Python
Tags: Jupyter, IPython
Slug: 2015cp_note1
Authors: b850617
Summary: 導入 notebook 內容

以下為 Jupyter notebook 檔案內容:

{% notebook brython_ex1.ipynb %}

{% notebook demo.ipynb %}



</t>
<t tx="544.20170514180423.1">&lt;section&gt;
&lt;h3&gt;V-rep 列印成果影片&lt;/h3&gt;
&lt;hr&gt;
&lt;p class="article"&gt;
&lt;/p&gt;
&lt;img src="g2/v_rep/V-rep 3D-Printer simulation.gif" align="center" width="80%"&gt;
&lt;/section&gt;</t>
<t tx="544.20170514195356.1">&lt;section&gt;
&lt;h3&gt;結論 &lt;/h3&gt;
&lt;hr&gt;
&lt;p class="article"&gt;
結論
&lt;img src="g2/printer.png"  align="right" width="30%"&gt;

&lt;/p&gt;
&lt;/section&gt;</t>
<t tx="544.20170514200717.2">&lt;section&gt;
&lt;h3&gt;Onshape - 簡介&lt;/h3&gt;
&lt;hr&gt;
&lt;img src="g2/onshape.png" width="50%"&gt;
&lt;img src="g2/onshape.jpg" width="45%"&gt;
&lt;p class="article"&gt;
Onshape 是一套由前 Solidworks 團隊開發出來的 3D 建模平台，它的優點及特色就是可以線上協同設計，和同伴能夠分工合作，且能達到參數式設計。
&lt;/p&gt;
&lt;p class="article"&gt;
Onshape的使用者分類 ：&lt;br&gt;
教育、商業跟業餘三大類。
&lt;/p&gt;
&lt;/section&gt;</t>
<t tx="544.20170514200732.2">&lt;section&gt;
&lt;h3&gt;V-rep - 八連桿範例&lt;/h3&gt;
&lt;hr&gt;

&lt;p class="article"&gt;
八連桿機構能在 V-rep 內做模擬，在未來若朝向 仿生機構 研究，使用此軟體是不錯的選擇。
&lt;/p&gt;
&lt;img src="g2/v_rep/eightbar_1.png" align="left" width="30%"&gt;
&lt;p align="center"&gt;
&lt;/br&gt;&lt;/br&gt;
八連桿模擬 與 實際應用
&lt;/p&gt;
&lt;img src="g2/solvespace_successful.gif" width="28%"&gt;

&lt;img src="g2/v_rep/8links.gif" width="40%"&gt;
&lt;/section&gt;</t>
<t tx="544.20170514200732.3"></t>
<t tx="544.20170514201601.1">&lt;section&gt;
&lt;h3&gt;Onshape - 簡介&lt;/h3&gt;
&lt;hr&gt;
&lt;img src="g2/cloud.jpg" width="40%"&gt;
&lt;img src="g2/cooperation.jpg" width="50%"&gt;
&lt;p class="article"&gt;
Onshape 是一種 Full Cloud 的網路 CAD 設計平台，它的檔案都存在"雲端" ，提供協同設計的功能，並且可以很容易地從雲上找到其他人公開的模型。 &lt;br&gt;
協同設計主要的概念為團隊間的分工合作，大家提供自己的想法或專長，使概念更完善，這部份 Onshape 甚至提供可在平板或手機上使用的功能。
&lt;/p&gt;
&lt;/section&gt;</t>
<t tx="544.20170515003915.1">&lt;section&gt;
&lt;h3&gt;V-rep - Printer校正&lt;/h3&gt;
&lt;hr&gt;
&lt;p class="article"&gt;
虛擬的 Printer 和 實體同樣需要校正，補正參數設定於控制程式內部。
&lt;br&gt;&lt;br&gt;    
&lt;/p&gt;
&lt;img src="g2/setposition.png" align="center" width="40%"&gt;

&lt;/section&gt;</t>
<t tx="544.20170515003932.1">&lt;section&gt;
&lt;h3&gt;控制範例 2 - 六軸感測器控制噴頭位置 &lt;/h3&gt;
&lt;hr&gt;
&lt;p class="article" &gt;
這個控制採用 MPU6050 六軸加速度感測器，經由角度之變化後，透過和前範例相同的方式，傳送數值到 V-rep 內部後，轉換成噴頭欲移動之座標點。
&lt;/p&gt;
&lt;img src="g2/6axis_arduino.png" align="center" width="50%"&gt;
&lt;/section&gt;</t>
<t tx="544.20170515003940.1">&lt;section&gt;
&lt;h3&gt;控制範例 1 - 可變電阻控制噴頭位置&lt;/h3&gt;
&lt;hr&gt;
&lt;p class="article"&gt;
若要使用 Arduino 控制 V-rep，除了Arduino本身的程式碼之外，還須設定 V-rep 的 Scripts 內部程式，並透過設定相同的通訊埠和鮑率，才能達到內外溝通的功能。
&lt;/p&gt;
&lt;img src="g2/arduino_lua.png" align="center" width="60%"&gt;
&lt;/section&gt;</t>
<t tx="544.20170515005219.1">&lt;section&gt;
&lt;h3&gt;研究動機&lt;/h3&gt;
&lt;hr&gt;
&lt;p class="article"&gt;
一開始我們在研究模擬腳踏車的齒輪與鍊條機構，利用 3D Printer 印製零件組裝，但是在印製的過程時常出現問題，導致花費許多時間和材料。
&lt;/br&gt;&lt;/br&gt;
經過討論想到如果有一套能夠模擬 3D列印 的軟體，先經過這套軟體的模擬可以降低錯誤的發生率，也可以提升印製的品質。
&lt;/p&gt;
&lt;/section&gt;</t>
<t tx="544.20170515005232.1">&lt;section&gt;
&lt;h3&gt;摘要&lt;/h3&gt;
&lt;hr&gt;
&lt;img src="g2/system1.png" align="center" width="50%"&gt;
&lt;p class="article"&gt;
根據 Gartner新興技術 報告指出，3D列印 是近年來發展最快速的技術之一 ，國內外各家科技大廠紛紛投入。
&lt;/br&gt;&lt;/br&gt;
3D列印技術讓原本只存在腦海中的概念，經由 3D-Printer 做快速打樣成型，節省了過往傳統打樣的繁複過程與費用。
&lt;/br&gt;&lt;/br&gt;
在使用 3D-Printer 列印的過程中，我們發現有時會有路徑錯誤的問題，相較於 CNC ，還缺少了模擬列印的功能，在列印前缺少一道檢查錯誤的程序。
&lt;/p&gt;
&lt;/section&gt;</t>
<t tx="544.20170515191155.1">&lt;section&gt;
&lt;h3&gt;控制範例 1 - Arduino程式&lt;/h3&gt;
&lt;hr&gt;
&lt;p class="article"&gt;
以下程式碼為使用三個可變電阻，分別控制V-rep內的Printer噴頭座標位置 。
&lt;/p&gt;
&lt;/br&gt;
&lt;p align="left"&gt;
方式:
&lt;/p&gt;
&lt;p class="article"&gt;
將三個可變電阻的值存成固定格式 (x,y,z)，以便在 V-rep 內部讀取後轉換成噴頭位置 。
&lt;/p&gt;
&lt;img src="g2/example2_ardunio.png" align="center" width="40%"&gt;
&lt;/section&gt;</t>
<t tx="544.20170515192011.1">&lt;section&gt;
&lt;h3&gt;控制範例 1 - Scripts 程式&lt;/h3&gt;
&lt;hr&gt;
&lt;p class="article"&gt;
本程式基本架構由 Eric Rohmer 所提供，控制方式為收到 Arduino 傳來固定格式的數值後，經由程式語法將其轉換為點座標，使噴頭移動到相對映的位置。
&lt;/p&gt;
&lt;img src="g2/example2_lua.png" align="center" width="60%"&gt;
&lt;/section&gt;</t>
<t tx="544.20170515195524.1">&lt;section&gt;
&lt;h3&gt;V-rep - 介面介紹&lt;/h3&gt;
&lt;hr&gt;
&lt;img src="g2/40323218/introduce1.PNG" width="100%"&gt;
&lt;p&gt;
&lt;img src="g2/vrep_printer.png" style="float:right;" width="55%"&gt;
&lt;div style="float:left;"&gt;
&lt;ol style="font-size:0.9em"&gt;
&lt;li&gt;視角移動&lt;/li&gt;
&lt;li&gt;視角旋轉&lt;/li&gt;
&lt;li&gt;視角縮放&lt;/li&gt;
&lt;li&gt;視角移動至物體&lt;/li&gt;
&lt;li&gt;物體定位 (x,y,z)&lt;/li&gt;
&lt;li&gt;物體旋轉 (x,y,z)&lt;/li&gt;
&lt;li&gt;開始模擬&lt;/li&gt;
&lt;li&gt;暫停模擬&lt;/li&gt;
&lt;li&gt;結束模擬&lt;/li&gt;
&lt;li&gt;慢速&lt;/li&gt;
&lt;li&gt;加速&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/section&gt;</t>
<t tx="544.20170515202348.1">&lt;section&gt;
&lt;h3&gt;V-rep - Particles&lt;/h3&gt;
&lt;hr&gt;
&lt;p class="article"&gt;
當噴頭經由G-Code得到路徑後，粒子會隨著噴頭的位置改變而產生。

&lt;/p&gt;
&lt;img src="g2/print1.png" width="80%"&gt;
&lt;/section&gt;</t>
<t tx="544.20170515222109.1">&lt;section&gt;
&lt;h3&gt;V-rep - G-Code&lt;/h3&gt;
&lt;hr&gt;
&lt;p class="article"&gt;
G-Code 的部分為 CURA 產生，並透過 Pyquino 解讀後將數值傳回 V-rep 內部，
&lt;/br&gt;
傳值方式類似於前兩者範例。
&lt;/p&gt;
&lt;img src="g2/gcode.png" width="80%"&gt;
&lt;/section&gt;</t>
<t tx="544.20170519005035.1">&lt;section&gt;
&lt;h3&gt;V-rep - 內部 Scripts 控制&lt;/h3&gt;
&lt;hr&gt;
&lt;p class="article"&gt;
V-rep可透過內部 Scripts 編寫控制指令，但要為了到模擬列印，需要與其他裝置或介面通訊。
&lt;/br&gt;
&lt;/p&gt;
&lt;img src="g2/v_rep/scripts_example.png" align="left" width="50%"&gt;
&lt;img src="g2/v_rep/fourbar_scripts.gif" width="40%"&gt;
&lt;/br&gt;
&lt;/br&gt;
&lt;/br&gt;
&lt;p class="article"&gt;
以下拿 Arduino 做為通訊範例。
&lt;/p&gt;
&lt;/section&gt;</t>
<t tx="544.20170520153339.1">&lt;section&gt;
&lt;h3&gt;虛擬控制 - 系統圖&lt;/h3&gt;
&lt;hr&gt;
&lt;p class="article"&gt;
&lt;/p&gt;
&lt;img src="g2/system3.png" align="center" width="100%"&gt;
&lt;/section&gt;</t>
<t tx="544.20170520153429.1">&lt;section&gt;
&lt;h3&gt;實體 - 系統圖&lt;/h3&gt;
&lt;hr&gt;
&lt;p class="article"&gt;
&lt;/p&gt;

&lt;img src="g2/system2.png"  align="center" width="100%"&gt;

&lt;/section&gt;</t>
<t tx="ahshoe.20170510224721.1">&lt;section&gt;
&lt;!--專案總覽--&gt;
&lt;h3&gt;專案總覽&lt;/h3&gt;
&lt;hr&gt;
&lt;img src="g2/pyslvs/Organization_chart.png" width="120%"&gt;
&lt;/section&gt;</t>
<t tx="ahshoe.20170510224930.1">&lt;section&gt;
&lt;!--大概功能介紹--&gt;
&lt;h3&gt;功能簡介&lt;/h3&gt;
&lt;hr&gt;
&lt;img src="g2/pyslvs/Features.png"&gt;
&lt;/section&gt;</t>
<t tx="ahshoe.20170510231618.1">&lt;section&gt;
&lt;!--Python--&gt;
&lt;h3&gt;Python 3&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;
&lt;img src="g2/pyslvs/python-logo-inkscape.svg"&gt;
&lt;ul&gt;
&lt;li style="color: red;"&gt;直譯式語言利於有效率地測試調整&lt;/li&gt;
&lt;li&gt;易於閱讀與整理的程式碼&lt;/li&gt;
&lt;li&gt;與中低階語言的結合力&lt;/li&gt;
&lt;li&gt;背景記憶體處理&lt;/li&gt;
&lt;li&gt;物件導向、泛型編成&lt;/li&gt;
&lt;li&gt;豐富、易使用的模組資源&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/section&gt;</t>
<t tx="ahshoe.20170519134311.1">&lt;section&gt;
&lt;!--主畫面--&gt;
&lt;h3&gt;平面連桿模擬&lt;/h3&gt;
&lt;hr&gt;
&lt;img src="g2/pyslvs/MainWindow.png" width="85%"&gt;
&lt;/section&gt;</t>
<t tx="ahshoe.20170519231059.1">&lt;section&gt;
&lt;!--比對--&gt;
&lt;h3&gt;與 Solvespace 比對&lt;/h3&gt;
&lt;hr&gt;
&lt;img src="g2/pyslvs/Evolution.png"&gt;
&lt;/section&gt;</t>
<t tx="ahshoe.20170519232249.1">&lt;section&gt;
&lt;!--格式--&gt;
&lt;h3&gt;轉入 V-rep&lt;/h3&gt;
&lt;hr&gt;
&lt;img src="g2/pyslvs/Format.png"&gt;
&lt;/section&gt;</t>
<t tx="ahshoe.20170519233231.1">&lt;section&gt;
&lt;!--主畫面--&gt;
&lt;h3&gt;尺寸合成&lt;/h3&gt;
&lt;hr&gt;
&lt;img src="g2/pyslvs/algorithm.png"&gt;
&lt;/section&gt;</t>
<t tx="amd.20150913232631.1"></t>
<t tx="amd.20150913232631.2">QTreeWidget {
    /* These apply to the selected item, but not to editing items.*/
    background-color: #ffffec; /* Leo's traditional tree color */
    selection-color: black; /* was white */
    selection-background-color: lightgrey;
    /* font-family: SansSerif; */
    /*font-family: DejaVu Sans Mono;*/
    font-family:YaHei Mono;
    /* 標題字型大小設定 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
 }

/* Headline edit widgets */
QTreeWidget QLineEdit {
    background-color: cornsilk;
    selection-color: white;
    selection-background-color: blue;
    /*font-family: DejaVu Sans Mono;*/    
    font-family:YaHei Mono;
    /* 沒有特別對應字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
}

/* The log panes */
QTextEdit {
    background-color: #f2fdff;
    selection-color: red;
    selection-background-color: blue;
    /* font-family: Courier New; */
    font-family:YaHei Mono;
    /* log font 大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
}

/* The body pane */
QTextEdit#richTextEdit {
    background-color: #fdf5f5; /* A kind of pink. */
    selection-color: white;
    selection-background-color: red;
    /*font-family: DejaVu Sans Mono;*/
    /* font-family: Courier New; */
    font-family:YaHei Mono;
    /* 內文字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
}

QLabel {
    font-family:YaHei Mono;'CherryPy', 'pytz', 'mako', 'beautifulsoup4', 'pymysql', 'peewee'
    /* 下方的 Minibuffer 標題字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
}

/* Editor labels */
QLineEdit#editorLabel {
    background-color: #ffffec;
    font-family:YaHei Mono;
    /* 沒有直接對應字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
    border: 2px;
    margin: 2px;
}</t>
<t tx="amd.20150913232631.3">horizontal: body pane to the left
vertical: body pane on the botton</t>
<t tx="amd.20150919102739.1">主要為 reveal.js 的簡報目錄架構, 其他子目錄為
images - 存放簡報與 pelican 網誌所需要的影像檔案
pelican - 存放 pelican 專案資料檔, 並且設法讓 pelican 所產生的 output 檔案直接存放到上層 reveal.js 根目錄
content/notebook - 存放 Jupyter 的 IPython notebook 檔案, 然後再由 pelican 設定, 將內容放入 blog 文章中
</t>
<t tx="amd.20150919113957.1"></t>
<t tx="amd.20150919114010.1"></t>
<t tx="amd.20150919120205.1"></t>
<t tx="amd.20150919124128.1">@language python
import os
os.system("pelican pelican/content -o ./ -s pelican/publishconf.py -t ../../theme/pelican-octopress")
g.es("user pelican 執行完畢")</t>
<t tx="amd.20151006113136.1"></t>
<t tx="amd.20151006130205.1">@language python
#!/usr/bin/env python
# -*- coding: utf-8 -*- #
from __future__ import unicode_literals

# This file is only used if you use `make publish` or
# explicitly specify it as your config file.

import os

AUTHOR = '40323250'
SITENAME = '2015FALL 40323250 電腦輔助設計實習 作業'
SITEURL = ''

PATH = 'content'

TIMEZONE = 'Asia/Taipei'

DEFAULT_LANG = 'en'

# Feed generation is usually not desired when developing
FEED_ALL_ATOM = None
CATEGORY_FEED_ATOM = None
TRANSLATION_FEED_ATOM = None
AUTHOR_FEED_ATOM = None
AUTHOR_FEED_RSS = None

# Blogroll
LINKS = (('2015課程網頁', 'http://wordpress-2015course.rhcloud.com/'),
         ('Python', 'http://python.org/'),('班級組別', 'http://2015fallhw.github.io/2015fallcadpb/category/g1.html'),('2015作業主頁', '../../'),('40323250 個人網頁', 'http://b850617.github.io/reveal2//'))

# Social widget
SOCIAL = (('twitter', 'http://twitter.com/ametaireau'),
          ('github', 'http://github.com/ametaireau'),)
          
DEFAULT_PAGINATION = 10

SITEURL = 'http://coursemdetw.github.io/reveal'
RELATIVE_URLS = True

FEED_ALL_ATOM = 'feeds/all.atom.xml'
CATEGORY_FEED_ATOM = 'feeds/%s.atom.xml'

DELETE_OUTPUT_DIRECTORY = True

# Following items are often useful when publishing

#DISQUS_SITENAME = ""
DISQUS_SITENAME = "2015fall"
#GOOGLE_ANALYTICS = ""

# 必須絕對目錄或相對於設定檔案所在目錄
PLUGIN_PATHS = ['./../../../plugin']
PLUGINS = ['liquid_tags.notebook']
# 目錄設定相對於 reveal 下的 content 目錄
NOTEBOOK_DIR = 'notebook'


</t>
<t tx="leo.20170505053249.1">@language xml
@tabwidth -4
@others</t>
<t tx="leo.20170505053249.10">@language css
/*
規則：
章節使用 id="章節名稱" 來識別
內文使用 class="article" 來識別
*/

/*目錄*/
#contents h4 {

}
#contents .article {
  font-size : 30px;
  text-align : left;
}
/*所有內文*/
.reveal .article {
  text-align : left;
  font-size : 0.75em;
}</t>
<t tx="leo.20170505053249.11">&lt;!-- 將整個投影片包在 "reveal" class 中 --&gt;
&lt;div class="reveal"&gt;
@others
&lt;/div&gt;</t>
<t tx="leo.20170505053249.12">&lt;!-- 將所有投影片包在 "slides" class 中 --&gt;
&lt;div class="slides"&gt;
@others
&lt;/div&gt;</t>
<t tx="leo.20170505053249.13">&lt;section&gt;
&lt;h3&gt;V-rep 在 Delta 3D-Printer&lt;/br&gt;虚實整合模擬上的應用&lt;/h3&gt;
&lt;hr&gt;
&lt;h4 style="font-size:0.8em"&gt;組員&lt;/h4&gt;
&lt;h4&gt;40323218 李冠興&lt;/h4&gt;
&lt;h4&gt;40323230 張&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;元&lt;/h4&gt;
&lt;h4&gt;40323231 張立昇&lt;/h4&gt;
&lt;h4&gt;40323250 詹偉志&lt;/h4&gt;
&lt;br&gt;
&lt;h4 style="font-size:0.8em"&gt;指導老師&lt;/h4&gt;
&lt;h4&gt;嚴家銘 教授&lt;/h4&gt;
&lt;h4&gt;李武鉦 教授&lt;/h4&gt;
&lt;/section&gt;</t>
<t tx="leo.20170505053249.142">&lt;!--script src="lib/js/head.min.js"&gt;&lt;/script--&gt;
&lt;script src="js/reveal.min.js"&gt;&lt;/script&gt;
&lt;script&gt;
// 啟動 Reveal.
Reveal.initialize({
});
&lt;/script&gt;</t>
<t tx="leo.20170505053249.19">&lt;!-- 以下為投影片 --&gt;
&lt;!-- 每一個 section 都代表一張投影片,  --&gt;
&lt;!-- section 標註中的多 section 標註, 將往下垂直延伸 --&gt;
&lt;section id="contents"&gt;
@others
&lt;/section&gt;</t>
<t tx="leo.20170505053249.2">&lt;!--
這個檔案展示了 reveal.js 投影片資料的基本架構
其中使用 "reveal" class 與 "slides" class 來界定投影片的資料範圍
而各投影片則以 &lt;section&gt;&lt;/section&gt; 標示
且支援平行與垂直的投影片配置方法
--&gt;</t>
<t tx="leo.20170505053249.3">&lt;!doctype html&gt;
&lt;html lang="en"&gt;
@others
&lt;/html&gt;</t>
<t tx="leo.20170505053249.35">&lt;section id="vrep"&gt;
@others
&lt;/section&gt;</t>
<t tx="leo.20170505053249.36">&lt;section&gt;
&lt;h3&gt;Delta 3D-Printer 架構介紹&lt;/h3&gt;
&lt;hr&gt;
&lt;img src="g2/40323231/1.png" width="65%"&gt;
&lt;/section&gt;</t>
<t tx="leo.20170505053249.4">&lt;head&gt;
&lt;meta charset="utf-8"&gt;
&lt;link rel="icon" href="kmol.ico"&gt;
&lt;title&gt;專題簡報：V-rep 在 Delta 3D Printer 虚實整合模擬上的應用&lt;/title&gt;
&lt;link rel="stylesheet" href="css/reveal.min.css"&gt;
&lt;link rel="stylesheet" href="css/theme/serif.css" id="theme"&gt;
&lt;!--增加對於 IE 早期版本的支援 --&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="lib/js/html5shiv.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;/head&gt;</t>
<t tx="leo.20170505053249.71">&lt;section id="vrep"&gt;
@others
&lt;/section&gt;</t>
<t tx="leo.20170505053249.72">&lt;section&gt;
&lt;h3&gt;V-rep - 簡介&lt;/h3&gt;
&lt;hr&gt;
&lt;p class="article"&gt;
V-rep為 Virtual robot experimentation platform 的縮寫，是一套機器人模擬軟體，讓使用者可以模擬整個機械系統 。
&lt;br&gt;&lt;br&gt;
程式語言支援 C/C++、 Python、 Java、 Lua、 Matlab、 Octave 等等，可使用在遠端監控、硬體控制、快速原型驗證、演算法開發與參數調整、安全性檢查、機器人教學與工廠自動化模擬等各種領域。
&lt;/p&gt;
&lt;img src="g2/vrep.jpg" width="55%"&gt;
&lt;/section&gt;</t>
<t tx="leo.20170505053249.8">&lt;body&gt;
@others
&lt;/body&gt;</t>
<t tx="leo.20170505053249.87">&lt;section&gt;
&lt;h3&gt;六軸感測器控制噴頭位置 範例影片&lt;/h3&gt;
&lt;hr&gt;
&lt;p align="center"&gt;
因為手的晃動導致噴頭位置不穩定
&lt;/p&gt;
&lt;img src="g2/v_rep/vrep - printer  simulation  by CJMCU-116.gif"" align="center" width="100%"&gt;
 
&lt;/section&gt;</t>
<t tx="leo.20170505053249.9">&lt;style&gt;
@others
&lt;/style&gt;</t>
<t tx="leo.20170505053249.92">&lt;section&gt;
&lt;h3&gt;可變電阻控制噴頭位置 範例影片&lt;/h3&gt;
&lt;hr&gt;
&lt;p class="article"&gt;
&lt;br&gt;
&lt;img src="g2/v_rep/v-rep control with arduino.gif" align="center" width="100%"&gt;
&lt;/p&gt;
&lt;/section&gt;</t>
<t tx="leo.20170505053249.96">&lt;section id="pyslvs"&gt;
@others
&lt;/section&gt;</t>
<t tx="leo.20170505053249.97">&lt;section&gt;
&lt;!--主要為「平面連桿模擬」以及「尺寸合成」兩個功能--&gt;
&lt;img src="g2/pyslvs/cover.png"&gt;
&lt;p&gt;
Planar Linkages Simulation
&lt;br&gt;
Dimensional Synthesis
&lt;/p&gt;
&lt;/section&gt;</t>
<t tx="leo.20170518041620.1">&lt;section&gt;
&lt;h3&gt;Onshape - 繪製範例&lt;/h3&gt;
&lt;hr&gt;
&lt;p class="article"&gt;
&lt;img src="g2/onshape/example_1.gif" width="30%"&gt;
&amp;nbsp;&amp;nbsp;
&lt;img src="g2/onshape/example_4.gif"  width="35%"&gt;
&amp;nbsp;&amp;nbsp;
&lt;img src="g2/onshape/onshape_printer2.gif"  width="28%"&gt;
&lt;/p&gt;
&lt;/section&gt;</t>
</tnodes>
</leo_file>
